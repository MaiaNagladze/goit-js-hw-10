{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btnStart = document.querySelector('button[data-start]');\nconst datetimeInput = document.querySelector('#datetime-picker');\nconst timerFields = {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n};\n\nlet selectedDate = null;\nlet countdownInterval = null;\nbtnStart.disabled = true;\n\nflatpickr(\"#datetime-picker\", {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose(selectedDates) {\n            const now = new Date();\n            selectedDate = selectedDates[0];\n\n            if (selectedDate <= now) {\n                btnStart.disabled = true;\n                iziToast.error({\n                    title: \"Error\",\n                    message: \"Please choose a date in the future\",\n                    position: 'topRight',\n                });\n            } else {\n                btnStart.disabled = false;\n            }\n        },\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n              \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n              \n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerInterface(days, hours, minutes, seconds) {\n    timerFields.days.textContent = String(days).padStart(2, \"0\");\n    timerFields.hours.textContent = String(hours).padStart(2, \"0\");\n    timerFields.minutes.textContent = String(minutes).padStart(2, \"0\");\n    timerFields.seconds.textContent = String(seconds).padStart(2, \"0\");\n}\n\nbtnStart.addEventListener('click', () => {\n    btnStart.disabled = true;\n    datetimeInput.disabled = true;\n\n    countdownInterval = setInterval(() => {\n        const now = new Date();\n        const timeRemaining = selectedDate - now;\n\n        if (timeRemaining <= 0) {\n            clearInterval(countdownInterval);\n            updateTimerInterface(0, 0, 0, 0);\n            datetimeInput.disabled = false;\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n        updateTimerInterface(days, hours, minutes, seconds);\n    }, 1000);\n});"],"names":["btnStart","datetimeInput","timerFields","selectedDate","countdownInterval","flatpickr","selectedDates","now","iziToast","convertMs","ms","days","hours","minutes","seconds","updateTimerInterface","timeRemaining"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAc,CAChB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EAAe,KACfC,EAAoB,KACxBJ,EAAS,SAAW,GAEpBK,EAAU,mBAAoB,CACtB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAM,IAAI,KAChBJ,EAAeG,EAAc,CAAC,EAE1BH,GAAgBI,GAChBP,EAAS,SAAW,GACpBQ,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC9B,CAAiB,GAEDR,EAAS,SAAW,EAE3B,CACT,CAAC,EAED,SAASS,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAqBJ,EAAMC,EAAOC,EAASC,EAAS,CACzDZ,EAAY,KAAK,YAAc,OAAOS,CAAI,EAAE,SAAS,EAAG,GAAG,EAC3DT,EAAY,MAAM,YAAc,OAAOU,CAAK,EAAE,SAAS,EAAG,GAAG,EAC7DV,EAAY,QAAQ,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,EACjEX,EAAY,QAAQ,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,CACrE,CAEAd,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpBC,EAAc,SAAW,GAEzBG,EAAoB,YAAY,IAAM,CAElC,MAAMY,EAAgBb,EADV,IAAI,KAGhB,GAAIa,GAAiB,EAAG,CACpB,cAAcZ,CAAiB,EAC/BW,EAAqB,EAAG,EAAG,EAAG,CAAC,EAC/Bd,EAAc,SAAW,GACzB,MACH,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAa,EACjED,EAAqBJ,EAAMC,EAAOC,EAASC,CAAO,CACrD,EAAE,GAAI,CACX,CAAC"}